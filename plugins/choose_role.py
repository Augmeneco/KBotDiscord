import plugin
import database
import discord
from discord.ext import commands

from plugins.roles import Roles

class ChooseRole:
    names = ['—Ä–æ–ª—å', 'role']
    desc = '–í—ã–±—Ä–∞—Ç—å —Ä–æ–ª—å'
    perm = 256

    role_watcher = {111:0}
    emoji_to_role = {
        'üáø': '–†–æ–ª—å1', 
        'üá¥': '–†–æ–ª—å2', 
        'üáª': '–†–æ–ª—å3', 
        'üá∑üá∫': '–†–æ–ª—å4', 
    }

    async def execute(self, msg):
        embedVar = discord.Embed(title="–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–±–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–æ–ª–∏, –Ω–∞–∂–∞–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º:", description="Desc", color=0xFF0000)
        message: discord.Message = await msg.message.channel.send(embed=embedVar)
        
        for key in self.emoji_to_role:
            await message.add_reaction(key)

        self.role_watcher[message.id] = msg.user.id

    async def reaction(self, client: commands.Bot, payload: discord.RawReactionActionEvent, add=True):
        if payload.message_id not in self.role_watcher: return

        guild = client.get_guild(payload.guild_id)
        if guild is None: return

        roles = {}
        for role in guild.roles:
            roles[role.name] = role

        try:
            role_name = self.emoji_to_role[payload.emoji.name]
            role = roles[role_name]
        except KeyError: return

        try:
            if add:
                await payload.member.add_roles(role)
            else:
                member = guild.get_member(payload.user_id)
                if member is None: return
                await member.remove_roles(role)
            
            #await Roles().update_roles(client)

        except discord.HTTPException: pass

        #del self.role_watcher[payload.message_id]

plugin.init_plugin(ChooseRole())
